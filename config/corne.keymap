/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    macros {
        comment_lines: comment_lines {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap>, <&kp LEFT_CONTROL &kp SLASH>;

            label = "COMMENT_LINES";
        };

        comment_block: comment_block {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_ALT &kp LEFT_COMMAND &kp SLASH>;

            label = "COMMENT_BLOCK";
        };

        shortcut: shortcut {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_press>, <&kp LEFT_COMMAND &kp LEFT_SHIFT &kp N5>;

            label = "SHORTCUT";
        };
    };

    combos {
        compatible = "zmk,combos";

        shiftx2 {
            bindings = <&key_repeat>;
            key-positions = <12>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp ESC         &kp Q  &kp W  &kp E     &kp R  &kp T        &kp Y    &kp U  &kp I      &kp O    &kp P     &kp BSPC
&kp LEFT_SHIFT  &kp A  &kp S  &kp D     &kp F  &kp G        &kp H    &kp J  &kp K      &kp L    &kp SEMI  &kp SQT
&kp LCTRL       &kp Z  &kp X  &kp C     &kp V  &kp B        &kp N    &kp M  &kp COMMA  &kp DOT  &kp FSLH  &kp ENTER
                              &kp LGUI  &mo 1  &kp SPACE    &kp DEL  &mo 2  &kp RALT
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB    &kp N1         &kp N2          &kp N3        &kp N4             &kp N5       &kp N6    &kp N7        &kp N8     &kp N9  &kp N0             &kp BSPC
&kp LSHFT  &kp RA(LBKT)   &kp RA(RBKT)    &kp RA(APOS)  &kp RA(BACKSLASH)  &kp MINUS    &none     &kp UP_ARROW  &none      &none   &kp LC(KP_DIVIDE)  &kp LC(LS(KP_DIVIDE))
&kp LCTRL  &kp LS(COMMA)  &kp LS(PERIOD)  &none         &kp AMPERSAND      &kp AT       &kp LEFT  &kp DOWN      &kp RIGHT  &none   &none              &none
                                          &kp LGUI      &trans             &kp SPACE    &kp RET   &trans        &kp RALT
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB       &kp EXCL        &kp AT        &kp HASH      &kp DLLR      &kp PRCNT        &kp CARET      &kp AMPS       &kp KP_MULTIPLY  &kp LPAR  &kp RPAR  &kp BSPC
&bt BT_CLR    &bt BT_CLR_ALL  &none         &none         &bt BT_NXT    &bt BT_PRV       &none          &none          &none            &none     &none     &none
&bt BT_SEL 0  &bt BT_SEL 1    &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &none            &kp LS(EQUAL)  &kp LS(MINUS)  &none            &none     &none     &none
                                            &kp LGUI      &trans        &kp LC(LS(F))    &kp LC(F)      &trans         &kp RALT
            >;
        };
    };
};
